(()=>{"use strict";class t extends Array{constructor(t){if("string"!=typeof t)throw new RangeError("KeyBind: Constructor argument must be a string");super(0);const e=t.trim().split(/\s+/g);for(const t of e)this.push(t)}toString(){return this.join(" ")}match(t){if(t.length!==this.length)return!1;for(const[e,o]of t.entries()){const t=this[e];if(!o.match(t))return!1}return!0}}const e=Object.freeze({alt:/\balt\+/g,ctrl:/\b(control|ctrl|command|cmd|meta)\+/g,shift:/\bshift\+/g}),o=Object.freeze({space:" ",spacebar:" ",up:"arrowup",right:"arrowright",down:"arrowdown",left:"arrowleft",esc:"escape"});class n{constructor(t){if(!("key"in t))throw new RangeError("KeyPress: key is a required option");this.key=t.key,this.modifiers={altKey:t.altKey||!1,ctrlKey:t.metaKey||t.ctrlKey||!1,shiftKey:t.shiftKey||!1}}match(t){const n={altKey:!1,ctrlKey:!1,shiftKey:!1};e.alt.test(t)&&(n.altKey=!0,t=t.replace(e.alt,"")),e.ctrl.test(t)&&(n.ctrlKey=!0,t=t.replace(e.ctrl,"")),e.shift.test(t)&&(n.shiftKey=!0,t=t.replace(e.shift,""));for(const t in n)if(n[t]&&!this.modifiers[t])return!1;return t.toLowerCase()===this.key.toLowerCase()||o[t.toLowerCase()]===this.key.toLowerCase()}}const s=new Map,i=Object.freeze({allowInInput:!1}),r=(e,o,s)=>{const r=Object.assign({},i,s),a=new t(e),u=[];return function(t){if(["Alt","Control","Meta","Shift"].includes(t.key))return;if(!r.allowInInput&&l(document.activeElement))return;if(c(document.activeElement))return;const e=new n(t);u.push(e),u.length>a.length&&u.shift(),a.match(u)&&(u.splice(0),o.apply(this,arguments))}},l=function(t){const e=t.nodeName.toLowerCase();let o=!1;if(["textarea","select"].includes(e))o=!0;else if("input"===e){o=!0;const e=(t.attributes.type?.value||"text").toLowerCase();["button","checkbox","color","file","hidden","image","radio","range","reset","submit"].includes(e)&&(o=!1)}else t.isContentEditable&&(o=!0);return o},c=function(t){let e=!1;return"input"===t.nodeName.toLowerCase()&&"password"===(t.attributes.type?.value||"text").toLowerCase()&&(e=!0),e};(function(){const t=".js-tooltip",e="tooltip--hidden";let o=!1;const n={init:function(){!1===o&&(n._initEvents(),n._initKeybinding()),o=!0},_initEvents:function(){document.querySelectorAll(t).forEach((t=>{t.addEventListener("mouseleave",n._removeHiddenClassEvent(t)),t.addEventListener("focusout",n._processTooltipFocusOut)}))},_initKeybinding:function(){((t,e,o)=>{s.has(t)||s.set(t,new Map);const n=s.get(t);if(n.has(e))return;const i=r(t,e,void 0);document.addEventListener("keydown",i),n.set(e,i)})("escape",n._hideOpenTooltips)},_hideOpenTooltips:function(){n._getOpenTooltips().forEach((t=>{t.classList.add(e)}))},_removeHiddenClassEvent:function(t){return e=>{document.activeElement!==t&&n._removeHiddenClass(t)}},_removeHiddenClass:function(t){t.classList.remove(e)},_processTooltipFocusOut:function(t){window.setTimeout((()=>{let e=t.target,o=document.activeElement,s=n._getClosestTooltip(e);s!==n._getClosestTooltip(o)&&n._removeHiddenClass(s)}),0)},_getOpenTooltips:function(){let t=n._getOpenTooltipBodies(),e=[];return t.forEach((t=>{let o=n._getClosestTooltip(t);o?e.push(o):console.error("Could not find tooltip of open body:",t)})),e},_getOpenTooltipBodies:function(){let t=document.querySelectorAll(".js-tooltip__body");return Array.from(t).filter((t=>null!==t.offsetParent))},_getClosestTooltip:function(e){let o=e;for(;o&&!1===o.matches(t);)o=o.parentElement;return o}};return{init:n.init}})().init()})();
//# sourceMappingURL=tooltip.bundle.js.map