(()=>{"use strict";const e=new Map;function t(e,t,n){if("string"==typeof e)try{e=document.querySelectorAll(e)}catch(t){throw new DOMException(`${n===o?"deactivate":"activate"} failed because it was passed an invalid selector string: '${e}'`)}e instanceof HTMLElement?n(e,t):e.forEach((e=>n(e,t)))}function n(t,n){if(!(t instanceof HTMLElement))throw new TypeError("activate failed because a valid HTMLElement was not passed");if(!(a(t,n)||(t.addEventListener("click",n),t instanceof HTMLButtonElement))){!1===s(t)&&t.addEventListener("keydown",c);const o=function(e){return function(t){if(i(t))return e.call(this,t)}}(n);t.addEventListener("keyup",o);const a={spacebarFn:o};if(!(t instanceof HTMLAnchorElement)){const e=function(e){return function(t){if(function(e){return!(!e.key||"enter"!==e.key.toLowerCase())}(t))return e.call(this,t)}}(n);t.addEventListener("keydown",e),a.enterFn=e}!function(t,n,o){let a=e.get(t);a||(a=new Map([[n,o]]),e.set(t,a));let s=a.get(n);s?Object.assign(s,o):(s=Object.assign({},o),a.set(n,s))}(t,n,a)}}function o(t,n){if(!(t instanceof HTMLElement))throw new TypeError("deactivate failed because a valid HTMLElement was not passed");t.removeEventListener("click",n);const o=a(t,n);o&&(t instanceof HTMLButtonElement||(o.spacebarFn&&t.removeEventListener("keyup",o.spacebarFn),t instanceof HTMLAnchorElement||o.enterFn&&t.removeEventListener("keydown",o.enterFn),function(t,n){const o=e.get(t);o&&(o.delete(n),e.delete(t))}(t,n),!1===s(t)&&t.removeEventListener("keydown",c)))}function a(t,n){const o=e.get(t);if(o)return o.get(n)}function s(t){return e.has(t)}function c(e){const t=this,n=t instanceof HTMLButtonElement,o=t instanceof HTMLInputElement||t instanceof HTMLTextAreaElement,a=i(e);n||o||!a||e.preventDefault()}function i(e){return!(!e.key||" "!==e.key&&"spacebar"!==e.key.toLowerCase())}t(".js-toggle-dark-mode",(()=>{let e=document.querySelector("body");e.classList.contains("dark-mode")?e.classList.remove("dark-mode"):e.classList.add("dark-mode")}),n)})();
//# sourceMappingURL=contrast.bundle.js.map