{"version":3,"sources":["webpack://Portfolio/./app/assets/js/src/keybinding/keybinding.js","webpack://Portfolio/./app/assets/js/src/tooltip/tooltip.js"],"names":["keys","bindings","module","_isFocusOnInput","$activeEl","document","activeElement","nodeName","toLowerCase","isInput","includes","inputType","attributes","type","value","isContentEditable","_bindFn","key","fn","fnWrapper","addEventListener","push","bind","allowInInput","requireCtrl","TypeError","event","ctrlKey","apply","this","arguments","preventDefault","stopPropagation","unbind","binding","index","length","removeEventListener","splice","rebind","oldKey","newKey","_getSequenceArgs","keyA","keyB","keyC","args","Array","prototype","call","isArray","bindSequence","keysPressed","shift","i","keyString","join","unbindSequence","rebindSequence","oldSequence","newSequence","selectors","classes","initialised","init","_initEvents","_initKeybinding","querySelectorAll","forEach","$tooltip","_removeHiddenClassEvent","_processTooltipFocusOut","_hideOpenTooltips","_getOpenTooltips","classList","add","e","_removeHiddenClass","remove","window","setTimeout","$oldFocus","target","$newFocus","$oldTooltip","_getClosestTooltip","$openBodies","_getOpenTooltipBodies","$tooltips","$el","console","error","$bodies","from","filter","offsetParent","matches","parentElement"],"mappings":"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","file":"tooltip.bundle.js","sourcesContent":["/* Keybinding 1.0 */\n\nconst keys = (function () {\n\tconst bindings = {};\n\t/*\n\t{\n\t\t[keyString]: [\n\t\t\t{\n\t\t\t\tfn: fnA,\n\t\t\t\tfnWrapper: fnWrapperA\n\t\t\t},\n\t\t\t{\n\t\t\t\tfn: fnB,\n\t\t\t\tfnWrapper: fnWrapperB\n\t\t\t}\n\t\t]\n\t}\n\t*/\n\n\tconst module = {\n\t\t_isFocusOnInput: function () {\n\t\t\t// Check if the current active element is an input that accepts keypresses\n\n\t\t\tlet $activeEl = document.activeElement;\n\t\t\tlet nodeName = $activeEl.nodeName.toLowerCase();\n\n\t\t\tlet isInput = (['input', 'textarea', 'select'].includes(nodeName));\n\n\t\t\tif (nodeName === 'input') {\n\t\t\t\tlet inputType = $activeEl.attributes.type.value.toLowerCase();\n\n\t\t\t\tif (['color', 'radio', 'checkbox'].includes(inputType)) {\n\t\t\t\t\tisInput = false;\n\t\t\t\t}\n\t\t\t} else if ($activeEl.isContentEditable) {\n\t\t\t\tisInput = true;\n\t\t\t}\n\n\t\t\treturn isInput;\n\t\t},\n\n\t\t_bindFn: function (key, fn, fnWrapper) {\n\t\t\tdocument.addEventListener('keydown', fnWrapper);\n\t\t\tif (!bindings[key]) {\n\t\t\t\tbindings[key] = [];\n\t\t\t}\n\n\t\t\tbindings[key].push({\n\t\t\t\tfn: fn,\n\t\t\t\tfnWrapper: fnWrapper\n\t\t\t});\n\t\t},\n\n\t\tbind: function (key, fn, allowInInput, requireCtrl) {\n\t\t\tif (typeof key !== 'string') {\n\t\t\t\tthrow new TypeError('The key parameter to bind must be a string.');\n\t\t\t} else {\n\t\t\t\tkey = key.toLowerCase();\n\t\t\t}\n\n\t\t\tlet fnWrapper = function (event) {\n\t\t\t\t// Don't check key if focus is on an input element,\n\t\t\t\t// unless it is allowed or requires Ctrl\n\t\t\t\tif (!allowInInput && module._isFocusOnInput() && !requireCtrl) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Some behaviour, like selecting an autocomplete result, can\n\t\t\t\t// fire a keydown event with no key\n\t\t\t\tif (event.key && event.key.toLowerCase() === key) {\n\t\t\t\t\tif (!requireCtrl || event.ctrlKey) {\n\t\t\t\t\t\tif (fn.apply(this, arguments) === false) {\n\t\t\t\t\t\t\t// Implement jQuery-like shorthand of return false;\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tmodule._bindFn(key, fn, fnWrapper);\n\t\t},\n\n\t\tunbind: function (key, fn) {\n\t\t\tlet binding = bindings[key];\n\t\t\tif (binding) {\n\t\t\t\t// Find index\n\t\t\t\tlet index;\n\t\t\t\tfor (index = 0; index < binding.length; index++) {\n\t\t\t\t\tif (binding[index].fn === fn) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (index < binding.length) {\n\t\t\t\t\tdocument.removeEventListener('keydown', binding[index].fnWrapper);\n\t\t\t\t\tbinding.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\trebind: function (oldKey, fn, newKey, allowInInput, requireCtrl) {\n\t\t\tmodule.unbind(oldKey, fn);\n\t\t\tmodule.bind(newKey, fn, allowInInput, requireCtrl);\n\t\t},\n\n\t\t_getSequenceArgs: function (keyA, keyB, keyC, fn) {\n\t\t\tlet args = Array.prototype.splice.call(arguments, 0);\n\t\t\tlet keys = args[0];\n\t\t\tfn = args[args.length-1]; // The function should be the last event\n\n\t\t\tif (!Array.isArray(keys)) {\n\t\t\t\tkeys = args.splice(0, args.length-1);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tkeys,\n\t\t\t\tfn\n\t\t\t};\n\t\t},\n\n\t\tbindSequence: function (keyA, keyB, keyC, fn) {\n\t\t\tlet args = module._getSequenceArgs.apply(this, arguments);\n\t\t\tlet keys = args.keys;\n\n\t\t\tlet keysPressed = [];\n\n\t\t\tfn = args.fn;\n\n\t\t\tif (keys.length > 1) {\n\t\t\t\t// Record as many of the past keys pressed as required for the sequence\n\n\t\t\t\tlet fnWrapper = function (event) {\n\t\t\t\t\tlet key = event.key.toLowerCase();\n\n\t\t\t\t\t// Don't check key presses if focus is on an input element\n\t\t\t\t\tif (module._isFocusOnInput()) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (key !== 'shift') {\n\t\t\t\t\t\t// Ignore shift, as it's used as a modifier\n\t\t\t\t\t\tkeysPressed.push(key);\n\t\t\t\t\t}\n\t\t\t\t\tif (keysPressed.length > keys.length) {\n\t\t\t\t\t\tkeysPressed.shift();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (key === keys[keys.length-1]) {\n\t\t\t\t\t\t// When the final key is pressed, check if the whole sequence matches\n\t\t\t\t\t\tlet i;\n\t\t\t\t\t\tfor (i = 0; i < keys.length; i++) {\n\t\t\t\t\t\t\tif (keys[i] !== keysPressed[i]) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// i only reaches keys.length if the break; line was never executed\n\t\t\t\t\t\tif (i === keys.length) {\n\t\t\t\t\t\t\tif (fn.apply(this, arguments) === false) {\n\t\t\t\t\t\t\t\t// Implement jQuery-like shorthand of return false;\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet keyString = keys.join(',');\n\t\t\t\tmodule._bindFn(keyString, fn, fnWrapper);\n\t\t\t}\n\t\t},\n\n\t\tunbindSequence: function (keyA, keyB, keyC, fn) {\n\t\t\tlet args = module._getSequenceArgs.apply(this, arguments);\n\t\t\tlet keyString = args.keys.join(',');\n\n\t\t\tfn = args.fn;\n\n\t\t\tmodule.unbind(keyString, fn);\n\t\t},\n\n\t\trebindSequence: function (oldSequence, fn, newSequence) {\n\t\t\tmodule.unbindSequence(oldSequence, fn);\n\t\t\tmodule.bindSequence(newSequence, fn);\n\t\t},\n\t};\n\n\treturn {\n\t\tbind: module.bind,\n\t\tunbind: module.unbind,\n\t\trebind: module.rebind,\n\n\t\tbindSequence: module.bindSequence,\n\t\tunbindSequence: module.unbindSequence,\n\t\trebindSequence: module.rebindSequence\n\t};\n})();\n\nexport { keys };\nexport default keys;\n","/* Tooltip 1.0 */\n\nimport { keys } from '../keybinding/keybinding.js';\n\nconst tooltip = (function () {\n\tconst selectors = {\n\t\ttooltip: '.js-tooltip',\n\t\tbody: '.js-tooltip__body'\n\t};\n\n\tconst classes = {\n\t\thidden: 'tooltip--hidden'\n\t};\n\n\tlet initialised = false;\n\n\tconst module = {\n\t\tinit: function () {\n\t\t\tif (initialised === false) {\n\t\t\t\tmodule._initEvents();\n\t\t\t\tmodule._initKeybinding();\n\t\t\t}\n\n\t\t\tinitialised = true;\n\t\t},\n\n\t\t_initEvents: function () {\n\t\t\tlet $tooltips = document.querySelectorAll(selectors.tooltip);\n\n\t\t\t$tooltips.forEach($tooltip => {\n\t\t\t\t$tooltip.addEventListener('mouseleave', module._removeHiddenClassEvent($tooltip));\n\t\t\t\t$tooltip.addEventListener('focusout', module._processTooltipFocusOut);\n\t\t\t});\n\t\t},\n\n\t\t_initKeybinding: function () {\n\t\t\tkeys.bind('escape', module._hideOpenTooltips);\n\t\t},\n\n\t\t_hideOpenTooltips: function () {\n\t\t\tlet $tooltips = module._getOpenTooltips();\n\n\t\t\t$tooltips.forEach($tooltip => {\n\t\t\t\t$tooltip.classList.add(classes.hidden);\n\t\t\t});\n\t\t},\n\n\t\t_removeHiddenClassEvent: function ($tooltip) {\n\t\t\treturn e => {\n\t\t\t\tif (document.activeElement !== $tooltip) {\n\t\t\t\t\tmodule._removeHiddenClass($tooltip);\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\n\t\t_removeHiddenClass: function ($tooltip) {\n\t\t\t$tooltip.classList.remove(classes.hidden);\n\t\t},\n\n\t\t_processTooltipFocusOut: function (e) {\n\t\t\t// Make asynchronous so new activeElement can be detected\n\t\t\twindow.setTimeout(() => {\n\t\t\t\tlet $oldFocus = e.target;\n\t\t\t\tlet $newFocus = document.activeElement;\n\n\t\t\t\tlet $oldTooltip = module._getClosestTooltip($oldFocus);\n\t\t\t\tlet $newTooltip = module._getClosestTooltip($newFocus);\n\n\t\t\t\tif ($oldTooltip !== $newTooltip) {\n\t\t\t\t\tmodule._removeHiddenClass($oldTooltip);\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t},\n\n\t\t_getOpenTooltips: function () {\n\t\t\tlet $openBodies = module._getOpenTooltipBodies();\n\n\t\t\tlet $tooltips = [];\n\t\t\t$openBodies.forEach($el => {\n\t\t\t\tlet $tooltip = module._getClosestTooltip($el);\n\n\t\t\t\tif ($tooltip) {\n\t\t\t\t\t$tooltips.push($tooltip);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('Could not find tooltip of open body:', $el);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn $tooltips;\n\t\t},\n\n\t\t_getOpenTooltipBodies: function () {\n\t\t\tlet $bodies = document.querySelectorAll(selectors.body);\n\t\t\tlet $openBodies = Array.from($bodies).filter($el => {\n\t\t\t\treturn $el.offsetParent !== null;\n\t\t\t});\n\n\t\t\treturn $openBodies;\n\t\t},\n\n\t\t_getClosestTooltip: function ($el) {\n\t\t\tlet $tooltip = $el;\n\t\t\twhile ($tooltip && $tooltip.matches(selectors.tooltip) === false) {\n\t\t\t\t$tooltip = $tooltip.parentElement;\n\t\t\t}\n\n\t\t\treturn $tooltip;\n\t\t}\n\t};\n\n\treturn {\n\t\tinit: module.init\n\t};\n})();\n\n// Self-initialise\ntooltip.init();\n\nexport default tooltip;\n"],"sourceRoot":""}