{"version":3,"sources":["webpack://Portfolio/./app/assets/js/src/validate/validate.js","webpack://Portfolio/./node_modules/throttle/throttle.js","webpack://Portfolio/./app/assets/js/src/validate/example.js"],"names":["throttle","selectors","classes","module","bindValidateEvent","$forms","document","querySelectorAll","Array","isArray","i","length","addEventListener","_invalidEvent","e","$form","target","form","$invalidInputs","$status","classList","add","forEach","textContent","window","setTimeout","_clearStatusClass","foreach","remove","fn","delay","timeout","apply","this","arguments","undefined","validate"],"mappings":"oBAEiB,SAAWA,GAC3B,MAAMC,EAEG,uBAGHC,EAGE,WAGFC,EAAS,CACdC,kBAAmB,SAAUC,GACN,iBAAXA,EACVA,EAASC,SAASC,iBAAiBF,GACxBG,MAAMC,QAAQJ,KACzBA,EAAS,CAACA,IAGX,IAAK,IAAIK,EAAI,EAAGA,EAAIL,EAAOM,OAAQD,IACtBL,EAAOK,GAGbE,iBAAiB,UAAWZ,EAASG,EAAOU,cAAe,KAAK,IAIxEA,cAAe,SAAUC,GACxB,IAAIC,EAAQD,EAAEE,OAAOC,KACjBC,EAAiBH,EAAMR,iBA5BnB,mDA6BJY,EAAUJ,EAAMR,iBAAiBN,GAErCc,EAAMK,UAAUC,IA1BN,gBA4BVF,EAAQG,SAASH,IAChBA,EAAQC,UAAUC,IAAInB,GACtBiB,EAAQI,YAAc,GAGtBC,OAAOC,YAAW,IAAMN,EAAQI,YAAc,0CAA0CL,EAAeP,uBAAuBO,EAAeP,OAAS,EAAI,IAAM,OAAO,SAIzKe,kBAAmB,SAAUX,GACdA,EAAMR,iBAAiBN,GAE7B0B,SAASR,GAAYA,EAAQC,UAAUQ,OAAO1B,OAIxD,OAAOC,EAAOC,mBAnDE,ECFA,SAAUyB,EAAIC,GAI9B,IAAIC,EAEJ,OAAO,WACDA,IACJF,EAAGG,MAAMC,KAAMC,WAEfH,EAAUN,YAAW,KACpBM,OAAUI,IACRL,OCVNM,CAAS,sB","file":"validate.bundle.js","sourcesContent":["import { throttle } from 'throttle';\n\nconst validate = (function (throttle) {\n\tconst selectors = {\n\t\tinvalid: 'input:invalid, select:invalid, textarea:invalid',\n\t\tstatus: '.js-validate__status'\n\t}\n\n\tconst classes = {\n\t\tvalidated: 'is-validated',\n\n\t\terror: 'is-error'\n\t};\n\n\tconst module = {\n\t\tbindValidateEvent: function ($forms) {\n\t\t\tif (typeof $forms === 'string') {\n\t\t\t\t$forms = document.querySelectorAll($forms);\n\t\t\t} else if (!Array.isArray($forms)) {\n\t\t\t\t$forms = [$forms];\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < $forms.length; i++) {\n\t\t\t\tlet $form = $forms[i];\n\n\t\t\t\t// Throttling at such a tiny delay prevents multiple concurrent calls\n\t\t\t\t$form.addEventListener('invalid', throttle(module._invalidEvent, 10), true);\n\t\t\t}\n\t\t},\n\n\t\t_invalidEvent: function (e) {\n\t\t\tlet $form = e.target.form;\n\t\t\tlet $invalidInputs = $form.querySelectorAll(selectors.invalid);\n\t\t\tlet $status = $form.querySelectorAll(selectors.status);\n\n\t\t\t$form.classList.add(classes.validated);\n\n\t\t\t$status.forEach(($status) => {\n\t\t\t\t$status.classList.add(classes.error);\n\t\t\t\t$status.textContent = '';\n\n\t\t\t\t// Set asynchronously so the new text will be read by screen readers\n\t\t\t\twindow.setTimeout(() => $status.textContent = `We couldn't submit the form because of ${$invalidInputs.length} invalid input${$invalidInputs.length > 1 ? 's' : ''}.`, 100);\n\t\t\t});\n\t\t},\n\n\t\t_clearStatusClass: function ($form) {\n\t\t\tlet $status = $form.querySelectorAll(selectors.status);\n\n\t\t\t$status.foreach(($status) => $status.classList.remove(classes.error));\n\t\t}\n\t};\n\n\treturn module.bindValidateEvent;\n})(throttle);\n\nexport { validate };\nexport default validate;\n","const throttle = function (fn, delay) {\n\t// Create a version of fn that will execute only if it\n\t// hasn't been called successfully within the last delay ms\n\n\tlet timeout;\n\n\treturn function () {\n\t\tif (!timeout) {\n\t\t\tfn.apply(this, arguments);\n\n\t\t\ttimeout = setTimeout(() => {\n\t\t\t\ttimeout = undefined;\n\t\t\t}, delay);\n\t\t}\n\t};\n};\n\nexport { throttle };\nexport default throttle;\n","import { validate } from './validate.js';\n\nvalidate('.js-validate-form');\n"],"sourceRoot":""}