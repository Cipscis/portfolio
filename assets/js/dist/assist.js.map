{"version":3,"file":"assist.js","mappings":"mBAAA,MAAMA,EAAgB,GAiBhBC,EAAY,SAAUC,EAAOC,GAC/B,MAAMC,EAAeF,EAhBkBG,MAAM,OAAOC,QAAOC,KAASA,IAiBpE,GAAIH,EAAOI,OAAS,EAChB,IAAK,MAAMN,KAASE,EAChBH,EAAUC,EAAOC,OAGpB,CACKD,KAASF,IACXA,EAAcE,GAAS,IAE3B,MAAMO,EAAYT,EAAcE,IAEK,IAAjCO,EAAUC,SAASP,IACnBM,EAAUE,KAAKR,KC3BrBS,EAAS,SAAWX,GACzB,MAAMY,EAAaC,SAASC,cAAc,QAC1C,IAAIC,GAAgB,EAEpB,MAQMC,EAAS,CACdC,MAAO,SAAUC,IACM,IAAlBH,GACHC,EAAOG,iBAGRP,EAAWQ,UAAY,GACvBC,OAAOC,YAAW,IAAMV,EAAWQ,UAAYF,GAAS,MAGzDC,eAAgB,WACfP,EAAWW,UAAUC,IAlBN,oBAmBfZ,EAAWa,aAAa,YAAa,aAErCZ,SAASa,KAAKC,YAAYf,GAE1BG,GAAgB,IAQlB,OAJIf,GACHA,EAxBO,gBAwBiBgB,EAAOC,OAGzB,CACNA,MAAOD,EAAOC,OArCD,CAuCZjB,GCzCHa,SAASe,cAAc,oBAAoBC,iBAAiB,UAAWC,IACtEA,EAAEC,iBACF,IACIb,EADWL,SAASe,cAAc,eACfI,MAEvBrB,EAAOM,MAAMC,O","sources":["webpack://@cipscis/portfolio/./node_modules/@cipscis/pubsub/dist/pubsub.js","webpack://@cipscis/portfolio/./app/assets/js/src/assist/assist.js","webpack://@cipscis/portfolio/./app/assets/js/src/assist/example.js"],"sourcesContent":["const subscriptions = {};\r\n// Split by whitespace, then remove any empty strings\r\nconst split = (eventString) => eventString.split(/\\s+/).filter(str => !!str);\r\nconst publish = function (event, ...args) {\r\n    const events = split(event);\r\n    if (events.length > 1) {\r\n        for (const event of events) {\r\n            publish.call(this, event, ...args);\r\n        }\r\n    }\r\n    else if (event in subscriptions) {\r\n        const callbacks = subscriptions[event];\r\n        callbacks.forEach((callback) => {\r\n            callback.apply(null, args);\r\n        });\r\n    }\r\n};\r\nconst subscribe = function (event, callback) {\r\n    const events = split(event);\r\n    if (events.length > 1) {\r\n        for (const event of events) {\r\n            subscribe(event, callback);\r\n        }\r\n    }\r\n    else {\r\n        if (!(event in subscriptions)) {\r\n            subscriptions[event] = [];\r\n        }\r\n        const callbacks = subscriptions[event];\r\n        // Don't bind a particular function to an event more than once\r\n        if (callbacks.includes(callback) === false) {\r\n            callbacks.push(callback);\r\n        }\r\n    }\r\n};\r\nconst unsubscribe = function (event, callback) {\r\n    if (event in subscriptions) {\r\n        const callbacks = subscriptions[event];\r\n        const index = callbacks.indexOf(callback);\r\n        if (index !== -1) {\r\n            callbacks.splice(index, 1);\r\n        }\r\n    }\r\n};\r\nexport { publish, subscribe, unsubscribe };\r\n//# sourceMappingURL=pubsub.js.map","/* Assist 1.0 */\n\nimport { subscribe } from '@cipscis/pubsub';\n\nconst assist = (function (subscribe) {\n\tconst $messageEl = document.createElement('span');\n\tlet messageElInit = false;\n\n\tconst classes = {\n\t\tvisuallyhidden: 'u-visuallyhidden',\n\t};\n\n\tconst events = {\n\t\tspeak: '/assist/speak',\n\t};\n\n\tconst module = {\n\t\tspeak: function (message) {\n\t\t\tif (messageElInit === false) {\n\t\t\t\tmodule._initMessageEl();\n\t\t\t}\n\n\t\t\t$messageEl.innerHTML = '';\n\t\t\twindow.setTimeout(() => $messageEl.innerHTML = message, 100);\n\t\t},\n\n\t\t_initMessageEl: function () {\n\t\t\t$messageEl.classList.add(classes.visuallyhidden);\n\t\t\t$messageEl.setAttribute('aria-live', 'assertive');\n\n\t\t\tdocument.body.appendChild($messageEl);\n\n\t\t\tmessageElInit = true;\n\t\t},\n\t};\n\n\tif (subscribe) {\n\t\tsubscribe(events.speak, module.speak);\n\t}\n\n\treturn {\n\t\tspeak: module.speak,\n\t};\n})(subscribe);\n\nexport { assist };\nexport default assist;\n","import { assist } from './assist.js';\n\ndocument.querySelector('.js-message-form').addEventListener('submit', (e) => {\n\te.preventDefault();\n\tlet $message = document.querySelector('.js-message');\n\tlet message = $message.value;\n\n\tassist.speak(message);\n});\n"],"names":["subscriptions","subscribe","event","callback","events","split","filter","str","length","callbacks","includes","push","assist","$messageEl","document","createElement","messageElInit","module","speak","message","_initMessageEl","innerHTML","window","setTimeout","classList","add","setAttribute","body","appendChild","querySelector","addEventListener","e","preventDefault","value"],"sourceRoot":""}