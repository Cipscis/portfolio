{"version":3,"sources":["webpack://Portfolio/./app/assets/js/src/keybinding/keybinding.js","webpack://Portfolio/./node_modules/activate/activate.js","webpack://Portfolio/./app/assets/js/src/keybinding/example.js"],"names":["keys","bindings","module","_isFocusOnInput","$activeEl","document","activeElement","nodeName","toLowerCase","isInput","includes","inputType","attributes","type","value","isContentEditable","_bindFn","key","fn","fnWrapper","addEventListener","push","bind","allowInInput","requireCtrl","TypeError","event","ctrlKey","apply","this","arguments","preventDefault","stopPropagation","unbind","binding","index","length","removeEventListener","splice","rebind","oldKey","newKey","_getSequenceArgs","keyA","keyB","keyC","args","Array","prototype","call","isArray","bindSequence","keysPressed","shift","i","keyString","join","unbindSequence","rebindSequence","oldSequence","newSequence","boundEvents","activate","deactivate","nodes","_activator","_activateSingle","_deactivateSingle","activator","querySelectorAll","e","method","DOMException","Node","forEach","node","_getNodeBindings","_isNodeType","_getNodeHasBindings","_preventSpacebarScroll","spacebarFn","_makeSpacebarFn","enterFn","_makeEnterFn","_rememberNodeBindings","_forgetNodeBindings","nodeB","find","el","fnB","Object","assign","fnBIndex","indexOf","isEnter","_isEnter","target","isButton","isSpacebar","_isSpacebar","nodeTypes","map","nodeType","setMessage","message","textContent","konamiCode","cheat","kPress"],"mappings":"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","file":"keybinding.bundle.js","sourcesContent":["/* Keybinding 1.0 */\n\nconst keys = (function () {\n\tconst bindings = {};\n\t/*\n\t{\n\t\t[keyString]: [\n\t\t\t{\n\t\t\t\tfn: fnA,\n\t\t\t\tfnWrapper: fnWrapperA\n\t\t\t},\n\t\t\t{\n\t\t\t\tfn: fnB,\n\t\t\t\tfnWrapper: fnWrapperB\n\t\t\t}\n\t\t]\n\t}\n\t*/\n\n\tconst module = {\n\t\t_isFocusOnInput: function () {\n\t\t\t// Check if the current active element is an input that accepts keypresses\n\n\t\t\tlet $activeEl = document.activeElement;\n\t\t\tlet nodeName = $activeEl.nodeName.toLowerCase();\n\n\t\t\tlet isInput = (['input', 'textarea', 'select'].includes(nodeName));\n\n\t\t\tif (nodeName === 'input') {\n\t\t\t\tlet inputType = $activeEl.attributes.type.value.toLowerCase();\n\n\t\t\t\tif (['color', 'radio', 'checkbox'].includes(inputType)) {\n\t\t\t\t\tisInput = false;\n\t\t\t\t}\n\t\t\t} else if ($activeEl.isContentEditable) {\n\t\t\t\tisInput = true;\n\t\t\t}\n\n\t\t\treturn isInput;\n\t\t},\n\n\t\t_bindFn: function (key, fn, fnWrapper) {\n\t\t\tdocument.addEventListener('keydown', fnWrapper);\n\t\t\tif (!bindings[key]) {\n\t\t\t\tbindings[key] = [];\n\t\t\t}\n\n\t\t\tbindings[key].push({\n\t\t\t\tfn: fn,\n\t\t\t\tfnWrapper: fnWrapper\n\t\t\t});\n\t\t},\n\n\t\tbind: function (key, fn, allowInInput, requireCtrl) {\n\t\t\tif (typeof key !== 'string') {\n\t\t\t\tthrow new TypeError('The key parameter to bind must be a string.');\n\t\t\t} else {\n\t\t\t\tkey = key.toLowerCase();\n\t\t\t}\n\n\t\t\tlet fnWrapper = function (event) {\n\t\t\t\t// Don't check key if focus is on an input element,\n\t\t\t\t// unless it is allowed or requires Ctrl\n\t\t\t\tif (!allowInInput && module._isFocusOnInput() && !requireCtrl) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Some behaviour, like selecting an autocomplete result, can\n\t\t\t\t// fire a keydown event with no key\n\t\t\t\tif (event.key && event.key.toLowerCase() === key) {\n\t\t\t\t\tif (!requireCtrl || event.ctrlKey) {\n\t\t\t\t\t\tif (fn.apply(this, arguments) === false) {\n\t\t\t\t\t\t\t// Implement jQuery-like shorthand of return false;\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tmodule._bindFn(key, fn, fnWrapper);\n\t\t},\n\n\t\tunbind: function (key, fn) {\n\t\t\tlet binding = bindings[key];\n\t\t\tif (binding) {\n\t\t\t\t// Find index\n\t\t\t\tlet index;\n\t\t\t\tfor (index = 0; index < binding.length; index++) {\n\t\t\t\t\tif (binding[index].fn === fn) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (index < binding.length) {\n\t\t\t\t\tdocument.removeEventListener('keydown', binding[index].fnWrapper);\n\t\t\t\t\tbinding.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\trebind: function (oldKey, fn, newKey, allowInInput, requireCtrl) {\n\t\t\tmodule.unbind(oldKey, fn);\n\t\t\tmodule.bind(newKey, fn, allowInInput, requireCtrl);\n\t\t},\n\n\t\t_getSequenceArgs: function (keyA, keyB, keyC, fn) {\n\t\t\tlet args = Array.prototype.splice.call(arguments, 0);\n\t\t\tlet keys = args[0];\n\t\t\tfn = args[args.length-1]; // The function should be the last event\n\n\t\t\tif (!Array.isArray(keys)) {\n\t\t\t\tkeys = args.splice(0, args.length-1);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tkeys,\n\t\t\t\tfn\n\t\t\t};\n\t\t},\n\n\t\tbindSequence: function (keyA, keyB, keyC, fn) {\n\t\t\tlet args = module._getSequenceArgs.apply(this, arguments);\n\t\t\tlet keys = args.keys;\n\n\t\t\tlet keysPressed = [];\n\n\t\t\tfn = args.fn;\n\n\t\t\tif (keys.length > 1) {\n\t\t\t\t// Record as many of the past keys pressed as required for the sequence\n\n\t\t\t\tlet fnWrapper = function (event) {\n\t\t\t\t\tlet key = event.key.toLowerCase();\n\n\t\t\t\t\t// Don't check key presses if focus is on an input element\n\t\t\t\t\tif (module._isFocusOnInput()) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (key !== 'shift') {\n\t\t\t\t\t\t// Ignore shift, as it's used as a modifier\n\t\t\t\t\t\tkeysPressed.push(key);\n\t\t\t\t\t}\n\t\t\t\t\tif (keysPressed.length > keys.length) {\n\t\t\t\t\t\tkeysPressed.shift();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (key === keys[keys.length-1]) {\n\t\t\t\t\t\t// When the final key is pressed, check if the whole sequence matches\n\t\t\t\t\t\tlet i;\n\t\t\t\t\t\tfor (i = 0; i < keys.length; i++) {\n\t\t\t\t\t\t\tif (keys[i] !== keysPressed[i]) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// i only reaches keys.length if the break; line was never executed\n\t\t\t\t\t\tif (i === keys.length) {\n\t\t\t\t\t\t\tif (fn.apply(this, arguments) === false) {\n\t\t\t\t\t\t\t\t// Implement jQuery-like shorthand of return false;\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet keyString = keys.join(',');\n\t\t\t\tmodule._bindFn(keyString, fn, fnWrapper);\n\t\t\t}\n\t\t},\n\n\t\tunbindSequence: function (keyA, keyB, keyC, fn) {\n\t\t\tlet args = module._getSequenceArgs.apply(this, arguments);\n\t\t\tlet keyString = args.keys.join(',');\n\n\t\t\tfn = args.fn;\n\n\t\t\tmodule.unbind(keyString, fn);\n\t\t},\n\n\t\trebindSequence: function (oldSequence, fn, newSequence) {\n\t\t\tmodule.unbindSequence(oldSequence, fn);\n\t\t\tmodule.bindSequence(newSequence, fn);\n\t\t},\n\t};\n\n\treturn {\n\t\tbind: module.bind,\n\t\tunbind: module.unbind,\n\t\trebind: module.rebind,\n\n\t\tbindSequence: module.bindSequence,\n\t\tunbindSequence: module.unbindSequence,\n\t\trebindSequence: module.rebindSequence\n\t};\n})();\n\nexport { keys };\nexport default keys;\n","/* Activate 1.0.2 */\n\n// Binds event listeners to one or more elements that makes them behave\n// like buttons, detecting both \"click\" events and also keydown for\n// the \"Enter\" key and keyup for the \"Space\" key.\n\n// Example usage:\n// activate(nodeList, fn);\n// activate(singleNode, fn);\n// activate(selector, fn);\n\nconst boundEvents = [];\n/*\n[\n\t{\n\t\tnode: Node,\n\t\tbindings: [\n\t\t\t{\n\t\t\t\tfn: Function,\n\t\t\t\tspacebarFn: Function,\n\t\t\t\tenterFn: Function\n\t\t\t}\n\t\t]\n\t}\n]\n*/\n\nconst { activate, deactivate } = (function () {\n\tconst module = {\n\t\tactivate: function (nodes, fn) {\n\t\t\tmodule._activator(nodes, fn, module._activateSingle);\n\t\t},\n\n\t\tdeactivate: function (nodes, fn) {\n\t\t\tmodule._activator(nodes, fn, module._deactivateSingle);\n\t\t},\n\n\t\t_activator: function (nodes, fn, activator) {\n\t\t\t// Share the same initial logic between activate and deactivate,\n\t\t\t// but run a different function over each node\n\n\t\t\tif (typeof nodes === 'string') {\n\t\t\t\ttry {\n\t\t\t\t\tnodes = document.querySelectorAll(nodes);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlet method = activator === module._deactivateSingle ? 'deactivate' : 'activate';\n\t\t\t\t\tthrow new DOMException(`${method} failed because it was passed an invalid selector string: '${nodes}'`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nodes instanceof Node) {\n\t\t\t\tactivator(nodes, fn);\n\t\t\t} else if (nodes.length && nodes.forEach) {\n\t\t\t\tnodes.forEach((node) => activator(node, fn));\n\t\t\t}\n\t\t},\n\n\n\n\t\t_activateSingle: function (node, fn) {\n\t\t\tif ((node instanceof Node === false)) {\n\t\t\t\tthrow new TypeError(`activate failed because a valid Node was not passed`);\n\t\t\t}\n\n\t\t\tif (module._getNodeBindings(node, fn)) {\n\t\t\t\t// Like addEventListener, don't try to rebind new copies of the same events\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// All nodes should bind the click event\n\t\t\tnode.addEventListener('click', fn);\n\n\t\t\t// Buttons will already treat keyboard events like clicks,\n\t\t\t// so only bind them to other node types\n\t\t\tlet isButton = module._isNodeType(node, 'button');\n\t\t\tif (isButton === false) {\n\t\t\t\tif (module._getNodeHasBindings(node) === false) {\n\t\t\t\t\t// addEventListener would prevent this event being\n\t\t\t\t\t// bound multiple times, but be explicit that it is\n\t\t\t\t\t// only bound if the node has no other events bound\n\t\t\t\t\tnode.addEventListener('keydown', module._preventSpacebarScroll);\n\t\t\t\t}\n\n\t\t\t\tlet spacebarFn = module._makeSpacebarFn(fn);\n\t\t\t\tnode.addEventListener('keyup', spacebarFn);\n\t\t\t\tlet bindings = {\n\t\t\t\t\tspacebarFn\n\t\t\t\t};\n\n\t\t\t\t// Links already treat \"enter\" keydown like a click\n\t\t\t\tlet isLink = module._isNodeType(node, 'a');\n\t\t\t\tif (isLink === false) {\n\t\t\t\t\t// Note that holding down \"enter\" will behave differently\n\t\t\t\t\t// for links in that it will only fire once, whereas for\n\t\t\t\t\t// non-links, including buttons, it will fire multiple times\n\t\t\t\t\tlet enterFn = module._makeEnterFn(fn);\n\t\t\t\t\tnode.addEventListener('keydown', enterFn);\n\t\t\t\t\tbindings.enterFn = enterFn;\n\t\t\t\t}\n\n\t\t\t\tmodule._rememberNodeBindings(node, fn, bindings);\n\t\t\t}\n\t\t},\n\n\t\t_deactivateSingle: function (node, fn) {\n\t\t\tif ((node instanceof Node === false)) {\n\t\t\t\tthrow new TypeError(`deactivate failed because a valid Node was not passed`);\n\t\t\t}\n\n\t\t\tlet bindings = module._getNodeBindings(node, fn);\n\n\t\t\t// All nodes have had a click event bound\n\t\t\tnode.removeEventListener('click', fn);\n\n\t\t\tif (!bindings) {\n\t\t\t\t// No other events to unbind\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buttons will already treat keyboard events like clicks,\n\t\t\t// so they didn't have keyboard events bound to them\n\t\t\tlet isButton = module._isNodeType(node, 'button');\n\t\t\tif (isButton === false) {\n\t\t\t\tnode.removeEventListener('keyup', bindings.spacebarFn);\n\n\t\t\t\t// Links already treat \"enter\" keydown like a click,\n\t\t\t\t// so that event wasn't bound to them\n\t\t\t\tlet isLink = module._isNodeType(node, 'a');\n\t\t\t\tif (isLink === false) {\n\t\t\t\t\tnode.removeEventListener('keydown', bindings.enterFn);\n\t\t\t\t}\n\n\t\t\t\tmodule._forgetNodeBindings(node, fn);\n\n\t\t\t\tif (module._getNodeHasBindings(node) === false) {\n\t\t\t\t\t// Only unbind this event if the node has no other bindings\n\t\t\t\t\tnode.removeEventListener('keydown', module._preventSpacebarScroll);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\n\t\t_rememberNodeBindings: function (node, fn, bindings) {\n\t\t\tlet nodeB = boundEvents.find(el => el.node === node);\n\t\t\tif (!nodeB) {\n\t\t\t\tnodeB = {\n\t\t\t\t\tnode: node,\n\t\t\t\t\tbindings: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfn\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t};\n\t\t\t\tboundEvents.push(nodeB);\n\t\t\t}\n\n\t\t\tlet fnB = nodeB.bindings.find(el => el.fn === fn);\n\t\t\tif (!fnB) {\n\t\t\t\tfnB = {\n\t\t\t\t\tfn\n\t\t\t\t};\n\t\t\t\tnodeB.bindings.push(fnB);\n\t\t\t}\n\n\t\t\tObject.assign(fnB, bindings);\n\t\t},\n\n\t\t_forgetNodeBindings: function (node, fn) {\n\t\t\tlet nodeB = boundEvents.find(el => el.node === node);\n\t\t\tif (!nodeB) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet fnB = nodeB.bindings.find(el => el.fn === fn);\n\t\t\tif (!fnB) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet fnBIndex = nodeB.bindings.indexOf(fnB);\n\n\t\t\tnodeB.bindings.splice(fnBIndex, 1);\n\t\t},\n\n\t\t_getNodeBindings: function (node, fn) {\n\t\t\tlet nodeB = boundEvents.find(el => el.node === node);\n\t\t\tif (!nodeB) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tlet fnB = nodeB.bindings.find(el => el.fn === fn);\n\t\t\tif (!fnB) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn fnB;\n\t\t},\n\n\t\t_getNodeHasBindings: function (node) {\n\t\t\tlet nodeB = boundEvents.find(el => el.node === node);\n\t\t\treturn !!nodeB;\n\t\t},\n\n\n\n\t\t_makeEnterFn: function (fn) {\n\t\t\treturn function (e) {\n\t\t\t\tlet isEnter = module._isEnter(e);\n\n\t\t\t\tif (isEnter) {\n\t\t\t\t\tfn.apply(this, arguments);\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\n\t\t_isEnter: function (e) {\n\t\t\tlet isEnter = e.key && (e.key.toLowerCase() === 'enter');\n\n\t\t\treturn isEnter;\n\t\t},\n\n\n\n\t\t_preventSpacebarScroll: function (e) {\n\t\t\t// Prevent spacebar from scrolling the page down on keydown\n\t\t\tlet node = e.target;\n\n\t\t\tlet isButton = module._isNodeType(node, 'button');\n\t\t\tlet isInput = module._isNodeType(node, 'input', 'textarea');\n\n\t\t\tlet isSpacebar = module._isSpacebar(e);\n\n\t\t\tif (!isButton && !isInput && isSpacebar) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t},\n\n\t\t_makeSpacebarFn: function (fn) {\n\t\t\treturn function (e) {\n\t\t\t\tlet isSpacebar = module._isSpacebar(e);\n\n\t\t\t\tif (isSpacebar) {\n\t\t\t\t\tfn.apply(this, arguments);\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\n\t\t_isSpacebar: function (e) {\n\t\t\t// IE11 uses 'spacebar' instead of ' '\n\t\t\tlet isSpacebar = e.key && (e.key === ' ' || e.key.toLowerCase() === 'spacebar');\n\n\t\t\treturn isSpacebar;\n\t\t},\n\n\n\n\t\t_isNodeType: function (node, ...nodeTypes) {\n\t\t\tnodeTypes = nodeTypes.map(el => el.toLowerCase());\n\n\t\t\tlet nodeType = node.nodeName.toLowerCase();\n\t\t\tlet isOfType = nodeTypes.includes(nodeType);\n\n\t\t\treturn isOfType;\n\t\t}\n\t};\n\n\treturn {\n\t\tactivate: module.activate,\n\t\tdeactivate: module.deactivate\n\t};\n})();\n\nexport { activate, deactivate };\nexport default activate;\n","import { keys } from './keybinding.js';\nimport { activate } from 'activate';\n\n(function (keys, activate) {\n\tconst setMessage = function (message) {\n\t\treturn function (e) {\n\t\t\te.preventDefault();\n\n\t\t\tlet $el = document.querySelectorAll('.js-text-message')[0];\n\t\t\t$el.textContent = message;\n\t\t};\n\t};\n\n\tconst konamiCode = ['arrowup', 'arrowup', 'arrowdown', 'arrowdown', 'arrowleft', 'arrowright', 'arrowleft', 'arrowright', 'b', 'a' ,'enter'];\n\tconst cheat = setMessage('Hey, stop cheating!');\n\n\tkeys.bind('a', setMessage('You pressed the \\'a\\' key'));\n\tkeys.bind('m', setMessage('You pressed Ctrl + \\'m\\''), true, true);\n\n\tkeys.bindSequence(konamiCode, cheat);\n\n\tactivate(document.querySelectorAll('.js-unbind-sequence')[0], function (e) {\n\t\tkeys.unbindSequence(konamiCode, cheat);\n\t});\n\n\tconst kPress = setMessage('You pressed the \\'k\\' key');\n\tactivate(document.querySelectorAll('.js-bind')[0], function (e) {\n\t\tkeys.bind('k', kPress);\n\t});\n\tactivate(document.querySelectorAll('.js-unbind')[0],  function (e) {\n\t\tkeys.unbind('k', kPress);\n\t});\n})(keys, activate);\n"],"sourceRoot":""}