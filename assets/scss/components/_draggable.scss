.draggable {
	position: relative;
}

// Drag/Drop
.draggable__item {
	position: relative;
	width: 100%; // Setting width explicitly is necessary for IE11

	&[draggable="true"], [draggable="true"] {
		cursor: move;
	}

	transition: all 0.25s ease-in-out;
	&.is-dragging {
		&::before {
			content: "";
			position: absolute;
			z-index: 1;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;

			background: var(--overlay);

			animation: 0.2s fadein forwards;
		}
	}

	&.is-droppable {}

	&.is-clone {
		position: fixed;
		z-index: 100;
		pointer-events: none;
		transition: none;
		opacity: 0.7;
	}
}

.is-dragging .draggable__item {
	// While the list is being dragged,
	// disable pointer-events within other
	// items' contents, so only the items
	// themselves will trigger drag events
	&.is-dragging {
		* {
			pointer-events: auto;
		}
	}
	* {
		.dragsort-full & {
			pointer-events: none;
		}
	}
}



.demo {
	.draggable {
		@include list-reset;
	}
	.draggable__item {
		margin-top: -2px;
		border: 1px solid var(--border);
	}
}
.demo__draggable-item {
	border: 1px solid var(--border);
	padding: 10px;
}
